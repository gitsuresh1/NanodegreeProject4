<paste log output from Kubernetes-mediated prediction, here>
voclabs:~/environment/NanodegreeProject4 (circleci-project-setup) $ ./run_kubernetes.sh 
* minikube v1.24.0 on Amazon 2
* Using the none driver based on existing profile

X The requested memory allocation of 1954MiB does not leave room for system overhead (total system memory: 1954MiB). You may face stability issues.
* Suggestion: Start minikube with less memory allocated: 'minikube start --memory=1954mb'

* Starting control plane node minikube in cluster minikube
* Updating the running none "minikube" bare metal machine ...
* OS release is Amazon Linux 2
* Preparing Kubernetes v1.22.3 on Docker 20.10.7 ...
* Configuring local host environment ...
* 
! The 'none' driver is designed for experts who need to integrate with an existing VM
* Most users should use the newer 'docker' driver instead, which does not require root!
* For more information, see: https://minikube.sigs.k8s.io/docs/reference/drivers/none/
* 
! kubectl and minikube configuration will be stored in /home/ec2-user
! To use kubectl or minikube commands as your own user, you may need to relocate them. For example, to overwrite your own settings, run:
* 
  - sudo mv /home/ec2-user/.kube /home/ec2-user/.minikube $HOME
  - sudo chown -R $USER $HOME/.kube $HOME/.minikube
* 
* This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true
* Verifying Kubernetes components...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
  - Using image kubernetesui/metrics-scraper:v1.0.7
  - Using image kubernetesui/dashboard:v2.3.1
voclabs:~/environment/NanodegreeProject4 (circleci-project-setup) $ kubectl get pods^C
voclabs:~/environment/NanodegreeProject4 (circleci-project-setup) $ ./run_kubernetes.sh 
---------STARTING MINIKUBE -------------
* minikube v1.24.0 on Amazon 2
* Using the none driver based on existing profile

X The requested memory allocation of 1954MiB does not leave room for system overhead (total system memory: 1954MiB). You may face stability issues.
* Suggestion: Start minikube with less memory allocated: 'minikube start --memory=1954mb'

* Starting control plane node minikube in cluster minikube
* Restarting existing none bare metal machine for "minikube" ...
* OS release is Amazon Linux 2
* Preparing Kubernetes v1.22.3 on Docker 20.10.7 ...
* Configuring local host environment ...
* 
! The 'none' driver is designed for experts who need to integrate with an existing VM
* Most users should use the newer 'docker' driver instead, which does not require root!
* For more information, see: https://minikube.sigs.k8s.io/docs/reference/drivers/none/
* 
! kubectl and minikube configuration will be stored in /home/ec2-user
! To use kubectl or minikube commands as your own user, you may need to relocate them. For example, to overwrite your own settings, run:
* 
  - sudo mv /home/ec2-user/.kube /home/ec2-user/.minikube $HOME
  - sudo chown -R $USER $HOME/.kube $HOME/.minikube
* 
* This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true
* Verifying Kubernetes components...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
  - Using image kubernetesui/dashboard:v2.3.1
  - Using image kubernetesui/metrics-scraper:v1.0.7
* Enabled addons: storage-provisioner, default-storageclass, dashboard
* Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
--------- MINIKUBE STARTED-------------
---------DEPLOYING DOCKER IMAGE  -------------
pod/nanodegreeproimg created
---------DOCKER IMAGE DEPLOYED SUCCESSFULLY -------------
---------LISTING THE PODS  -------------
NAME               READY   STATUS    RESTARTS   AGE
nanodegreeproimg   0/1     Pending   0          0s
--------------------------- -------------
---------FORWARDING THE PORTS HOST:CONTAINER PORT MAPPING  -------------
error: unable to forward port because pod is not running. Current status=Pending
voclabs:~/environment/NanodegreeProject4 (circleci-project-setup) $ ./run_kubernetes.sh 
---------STARTING MINIKUBE -------------
* minikube v1.24.0 on Amazon 2
* Using the none driver based on existing profile

X The requested memory allocation of 1954MiB does not leave room for system overhead (total system memory: 1954MiB). You may face stability issues.
* Suggestion: Start minikube with less memory allocated: 'minikube start --memory=1954mb'

* Starting control plane node minikube in cluster minikube
* Updating the running none "minikube" bare metal machine ...
* OS release is Amazon Linux 2
* Preparing Kubernetes v1.22.3 on Docker 20.10.7 ...
* Configuring local host environment ...
* 
! The 'none' driver is designed for experts who need to integrate with an existing VM
* Most users should use the newer 'docker' driver instead, which does not require root!
* For more information, see: https://minikube.sigs.k8s.io/docs/reference/drivers/none/
* 
! kubectl and minikube configuration will be stored in /home/ec2-user
! To use kubectl or minikube commands as your own user, you may need to relocate them. For example, to overwrite your own settings, run:
* 
  - sudo mv /home/ec2-user/.kube /home/ec2-user/.minikube $HOME
  - sudo chown -R $USER $HOME/.kube $HOME/.minikube
* 
* This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true
* Verifying Kubernetes components...
  - Using image kubernetesui/metrics-scraper:v1.0.7
  - Using image kubernetesui/dashboard:v2.3.1
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
* Enabled addons: storage-provisioner, default-storageclass, dashboard
* Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
--------- MINIKUBE STARTED-------------
---------DEPLOYING DOCKER IMAGE  -------------
Error from server (AlreadyExists): pods "nanodegreeproimg" already exists
---------DOCKER IMAGE DEPLOYED SUCCESSFULLY -------------
---------LISTING THE PODS  -------------
NAME               READY   STATUS    RESTARTS   AGE
nanodegreeproimg   1/1     Running   0          19s
--------------------------- -------------
---------FORWARDING THE PORTS HOST:CONTAINER PORT MAPPING  -------------
Forwarding from 0.0.0.0:8080 -> 80
Handling connection for 8080
Handling connection for 8080


--------------FEEDBACK COMMENT-----------------------
voclabs:~/environment/NanodegreeProject4 (main) $ ./make_prediction.sh 
Port: 8080
{
  "prediction": [
    20.35373177134412
  ]
}
voclabs:~/environment/NanodegreeProject4 (main) $ 